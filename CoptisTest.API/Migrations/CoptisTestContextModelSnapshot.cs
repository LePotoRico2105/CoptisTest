// <auto-generated />
using System;
using CoptisTest.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoptisTest.API.Migrations
{
    [DbContext(typeof(CoptisTestContext))]
    partial class CoptisTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccessUser", b =>
                {
                    b.Property<int>("AccessesAccessId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("AccessesAccessId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("UserAccesses", (string)null);

                    b.HasData(
                        new
                        {
                            AccessesAccessId = 1,
                            UsersUserId = 1
                        },
                        new
                        {
                            AccessesAccessId = 2,
                            UsersUserId = 1
                        },
                        new
                        {
                            AccessesAccessId = 3,
                            UsersUserId = 1
                        },
                        new
                        {
                            AccessesAccessId = 4,
                            UsersUserId = 1
                        },
                        new
                        {
                            AccessesAccessId = 5,
                            UsersUserId = 1
                        });
                });

            modelBuilder.Entity("CoptisTest.Models.Access", b =>
                {
                    b.Property<int>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AccessId");

                    b.HasIndex("Name");

                    b.ToTable("Accesses");

                    b.HasData(
                        new
                        {
                            AccessId = 1,
                            Name = "users"
                        },
                        new
                        {
                            AccessId = 2,
                            Name = "usersuser"
                        },
                        new
                        {
                            AccessId = 3,
                            Name = "shop"
                        },
                        new
                        {
                            AccessId = 4,
                            Name = "shopproduct"
                        },
                        new
                        {
                            AccessId = 5,
                            Name = "orders"
                        });
                });

            modelBuilder.Entity("CoptisTest.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CoptisTest.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Gold 1kg",
                            Price = 50000.0,
                            Quantity = 10
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Silver 1kg",
                            Price = 7000.0,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("CoptisTest.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@admin",
                            FirstName = "User",
                            LastName = "Admin",
                            Password = "admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AccessUser", b =>
                {
                    b.HasOne("CoptisTest.Models.Access", null)
                        .WithMany()
                        .HasForeignKey("AccessesAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoptisTest.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoptisTest.Models.Order", b =>
                {
                    b.HasOne("CoptisTest.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoptisTest.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoptisTest.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CoptisTest.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
